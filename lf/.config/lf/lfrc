#######################################################################
# LF File Manager
#######################################################################

set color256  on
set icons     on
set shell     'sh'
set shellopts '-eu'
set ifs       "\n"
set previewer ~/.config/lf/scripts/preview
set scrolloff 4

# Commands ############################################################

cmd open ${{
  case $(file -b --mime-type -- $f) in
    text/*)
      $EDITOR $fx ;;
    *)
      for f in $fx; do
        setsid $OPENER $f >/dev/null 2>&1 &
      done
      ;;
  esac
}}

cmd mkd %{{
  new=$(echo $* | tr ' ' '\ ')
  mkdir -pv "$new"
  lf -remote "send $id select \"$new\""
}}

cmd trash %{{
  if command -v trash-put >/dev/null; then
    trash-put $fx
  elif command -v gio >/dev/null; then
    gio trash $fx
  elif command -v osascript >/dev/null; then
    for fl in $fx; do
      osascript -e "tell app \"Finder\" delete POSIX file \"$fl\""
    done
  else
    mkdir -p ~/.trash
    mv $fx ~/.trash
  fi
}}

cmd extract %{{
  set -f
  if command -v atool >/dev/null; then
    atool --extract -- "$f"
  else
    case "$f" in
      *.tar*|*.tb2|*.tbz|*.tbz2|*.tgz|*.tlz|*.txz|*.tZ|*.tzst)
        tar -xvf "$f" ;;
      *.zip)
        unzip "$f" ;;
      *.rar)
        unar "$f" ;;
      *.7z)
        7z x "$f" ;;
      *.exe)
        cabextract "$f" ;;
      *)
        printf "Unknown archive format: '%s'\\n" "$f" ;;
    esac
  fi
}}

cmd tgz %tar -czf "$1.tgz" "$fx"
cmd zip %zip -r "$1.zip" "$fx"

cmd bulk-rename ${{
  LFDIR="${XDG_RUNTIME_DIR:-/tmp/$USER}/lf"
  OF=$(mktemp -p "$LFDIR" rename.ori.XXXX)
  RF=$(mktemp -p "$LFDIR" rename.new.XXXX)
  EF=$(mktemp -p "$LFDIR" rename.exe.XXXX.sh)
  realpath --relative-to "$PWD" $fx | tee "$OF" > "$RF"
  $EDITOR "$RF"
  paste -d '\n' "$OF" "$RF" \
  | xargs -d '\n' printf 'mv -- %q %q\n' \
  | cat ~/.config/lf/templates/bulk-rename.sh - > "$EF"
  $EDITOR "$EF"
  $lf_shell "$EF"
  rm "$OF" "$RF" "$EF"
}}

cmd jump ${{
  [ "$lf_hidden" = true ] && hidden='--hidden'
  lf -remote "send $id select \"$(rg --files ${hidden:-} | fzy)\""
}}

cmd recol %{{
  readonly width=$(tput cols)
  ratios='1:2:3:6'
  if [ $width -le 80 ]; then
    ratios='1:2'
  elif [ $width -le 160 ]; then
    ratios='1:2:3'
  fi
  lf -remote "send $id set ratios $ratios"
}}

cmd new-from-menu ${{
  cd "${XDG_TEMPLATES_DIR:-$HOME/Templates}"
  readonly tmp=$(find -type f,l ! -path '*/.*' | sed s:^./:: | fzy)
  if [ -r "$tmp" ]; then
    new="new.${tmp##*.}"
    lf -remote "send $id push :new-from<space>$tmp<space>$new"
  fi
}}

cmd new-from %{{
  tdir="${XDG_TEMPLATES_DIR:-$HOME/Templates}"
  ~/.config/lf/scripts/make-template "$tdir/$1" -o "$2"
  lf -remote "send $id select \"$2\""
  printf 'created `%s` from template `%s`' "$2" "$1"
}}

cmd guidrag %dragdrop -t 'Copy from…' $fx
cmd guidrop %dragdrop -t 'Copy here…' | xargs -rI% cp % .

cmd dl %echo $* | xargs -ri curl -JLO# '{}'

# Mappings ############################################################

# Navigation
map gg top
map ge bottom
map ga push ''
map gh cd ~
map gf jump

map <enter> shell
map x $$f
map X !$f

map o &mimeopen $f
map O $mimeopen --ask $f

# Files
map a push :mkd<space>
map A new-from-menu
map <delete> trash

map .. guidrag
map ., guidrop

# Startup #############################################################

%mkdir -pm 700 ${XDG_RUNTIME_DIR:-/tmp/$USER}/lf

recol
