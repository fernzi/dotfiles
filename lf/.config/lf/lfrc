#######################################################################
# LF File Manager
#######################################################################

set color256  on
set icons     on
set shell     'sh'
set shellopts '-eu'
set ifs       "\n"
set previewer ~/.config/lf/scripts/preview
set scrolloff 4

## Commands ###########################################################

cmd open ${{
  case $(file -b --mime-type -- $f) in
    text/*)
      $EDITOR $fx ;;
    *)
      for f in $fx; do
        setsid $OPENER $f >/dev/null 2>&1 &
      done
      ;;
  esac
}}

cmd mkd %mkdir -pv "$(echo $* | tr ' ' '\ ')"

cmd trash %{{
  if command -v trash-put >/dev/null; then
    trash-put $fx
  elif command -v gio >/dev/null; then
    gio trash $fx
  elif command -v osascript >/dev/null; then
    for fl in $fx; do
      osascript -e "tell app \"Finder\" delete POSIX file \"$fl\""
    done
  else
    mkdir -p ~/.trash
    mv $fx ~/.trash
  fi
}}

cmd extract ${{
  set -f
  if command -v atool >/dev/null; then
    atool --extract -- "$f"
  else
    case "$f" in
      *.tar*|*.tb2|*.tbz|*.tbz2|*.tgz|*.tlz|*.txz|*.tZ|*.tzst)
        tar -xvf "$f" ;;
      *.zip)
        unzip "$f" ;;
      *.rar)
        unar "$f" ;;
      *.7z)
        7z x "$f" ;;
      *.exe)
        cabextract "$f" ;;
      *)
        printf "Unknown archive format: '%s'\\n" "$f" ;;
    esac
  fi
}}

cmd tgz ${{
  set -f
  tar -czf "$1.tar.gz" "$fx"
}}

cmd zip ${{
  set -f
  zip -r "$1.zip" "$fx"
}}

cmd bulkrename ${{
  set -f
  LFDIR="${XDG_RUNTIME_DIR:-/tmp/$USER}/lf"
  ofile=$(mktemp -p "$LFDIR" rename.ori.XXXX)
  rfile=$(mktemp -p "$LFDIR" rename.new.XXXX)
  efile=$(mktemp -p "$LFDIR" rename.exe.XXXX.sh)
  realpath --relative-to "$PWD" $fx | tee "$ofile" > "$rfile"
  $EDITOR $rfile
  printf '# The following commands will be executed.\n' >> "$efile"
  printf '# Clear the file to abort.\n\n' >> "$efile"
  while read old <&3 && read new <&4; do
    if [ "$old" != "$new" ]; then
      printf "mv -- '%s' '%s'\\n" "$old" "$new" >> "$efile"
    fi
  done 3< "$ofile" 4< "$rfile"
  $EDITOR "$efile"
  sh "$efile"
  rm $ofile $rfile $efile
}}

cmd jump ${{
  [ "$lf_hidden" = true ] && hidden='--hidden' || hidden=
  lf -remote "send $id select \"$(rg --files $hidden | fzy)\""
}}

cmd recol %{{
  set -f
  readonly width=$(tput cols)
  ratios='1:2:3:6'
  if [ $width -le 80 ]; then
    ratios='1:2'
  elif [ $width -le 160 ]; then
    ratios='1:2:3'
  fi
  lf -remote "send $id set ratios $ratios"
}}

cmd newfromtemplate ${{
  set -f
  readonly tdir=${XDG_TEMPLATES_DIR:-$HOME/Templates}
  readonly tmpf=$(rg -L --files "$tdir" | fzy)
  readonly newf="new_file.${tmpf##*.}"
  if [ -r "$tmpf" ]; then
    cp --no-preserve=all -- "$tmpf" "$newf"
    lf -remote "send $id select \"$newf\""
  fi
}}

cmd guidrag %dragdrop -t 'Copy from…' $fx
cmd guidrop %dragdrop -t 'Copy here…' | xargs -rI% cp % .

## Mappings ###########################################################

### Navigation ###
map gg top
map ge bottom
map ga push ''
map gh cd ~
map gf jump

map <enter> shell
map x $$f
map X !$f

map o &mimeopen $f
map O $mimeopen --ask $f

### Files ###
map a push :mkd<space>
map A newfromtemplate
map <delete> trash

map .. guidrag
map ., guidrop

## Startup ############################################################

%mkdir -pm 700 ${XDG_RUNTIME_DIR:-/tmp/$USER}/lf

recol
