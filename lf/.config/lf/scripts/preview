#!/bin/sh -efu
# Copyright Â© 2022 Fern Zapata
# This program is subject to the terms of the GNU GPL, either
# version 3 of the License or (at your option) any later version.
# You should have received a copy of the License along with this
# file. If not, see <https://www.gnu.org/licenses/>.

command_exists() {
	command -v -- $1 >/dev/null 2>&1
}

prev_img() {
	if test -p "${LF_UEBERZUG:-}"; then
		# FIXME: Accounting for padding is purdy hacky.
		# Also, it'd be nice to remove the `jq` dependency.
		jq -cn \
			'{action:"add", identifier:"lf", scaler:"fit_contain",
			  scaling_position_x: 0.5, scaling_position_y: 0.5,
			  x: $x, y: $y, width: $w, height: $h, path: $p}' \
			--arg p "$1" \
			--argjson w "$(( $2 - 3 ))" --argjson h "$(( $3 - 2 ))" \
			--argjson x "$(( $4 + 1 ))" --argjson y "$(( $5 + 1 ))" \
			>"${LF_UEBERZUG}"
		exit 1
	elif command_exists chafa; then
		chafa \
			--colors 240 \
			--size "${2}x${3}" \
			--symbols 'ascii+vhalf+block+space' \
			--font-ratio 1/2 \
			-- "$1"
	elif command_exists img2txt; then
		img2txt -W "$2" -x 1 -y 2 -f utf8 -- "$1"
	elif command_exists magick; then
		magick \
			-read "$1" \
			-format '%m %z-bin %[colorspace]\n%g\n' \
			info:-
	else
		return 1
	fi
}

prev_pdf() {
	if command_exists pdftotext; then
		pdftotext -layout -l 8 -nopgbrk -q -- "$1" -
	else
		return 1
	fi
}

prev_snd() {
	if command_exists ffprobe; then
		ffprobe \
			-v error \
			-show_entries format_tags=title,artist,album,date \
			-of default=noprint_wrappers=1 \
			-- "$1" |
			awk -F'[:=]' '{printf "%-7s: %s\n", toupper($2), $3}'
	else
		return 1
	fi
}

prev_svg() {
	local thumb="${LF_CACHE_DIR}/$(stat -c '%i%s%Y%Z' "$1").webp"
	if test ! -r "${thumb}" && command_exists magick; then
		magick "$1" -resize 256x256\> "${thumb}"
	fi
	if test -r "${thumb}"; then
		shift
		prev_img "${thumb}" "$@"
	else
		return 1
	fi
}

prev_tor() {
	if command_exists transmission-show; then
		transmission-show -- "$1" | tail +4
	else
		return 1
	fi
}

prev_txt() {
	if command_exists highlight; then
		highlight \
			--force \
			--out-format=xterm256 \
			--replace-tabs=2 \
			--style=base16/monokai \
			-- "$1"
	elif command_exists bat; then
		bat \
			--color always \
			--style plain \
			--paging never \
			--terminal-width "$2" \
			--wrap character \
			-- "$1"
	else
		cat "$1"
	fi
}

prev_vid() {
	local thumb="${LF_CACHE_DIR}/$(stat -c '%i%s%Y%Z' "$1").webp"
	if test ! -r "${thumb}" && command_exists ffmpeg; then
		ffmpeg \
			-v quiet -y \
			-ss 3 \
			-i "$1" \
			-frames:v 1 \
			-vf scale=192:-2 \
			-- "${thumb}"
	fi
	if test -r "${thumb}"; then
		shift
		prev_img "${thumb}" "$@"
	else
		return 1
	fi
}

prev_any() {
	case "$(file -Lb --mime-type "$1")" in
		image/svg*)
			prev_svg "$@" || echo '(image)' ;;
		image/*)
			prev_img "$@" || echo '(image)' ;;
		text/*|*/xml|*/json|*/javascript)
			prev_txt "$@" || echo '(text)' ;;
		application/*pdf)
			prev_pdf "$@" || echo '(document)' ;;
		audio/*)
			prev_snd "$@" || echo '(audio)' ;;
		video/*)
			prev_vid "$@" || echo '(video)' ;;
		*bittorrent)
			prev_tor "$@" || echo '(torrent)' ;;
		*)
			echo '(binary)' ;;
	esac
}

prev_clean() {
	if test -p "${LF_UEBERZUG:-}"; then
		echo '{"action":"remove","identifier":"lf"}' >"${LF_UEBERZUG}"
	fi
}

if test $# -gt 1; then
	prev_any "$@"
else
	prev_clean "$@"
fi
