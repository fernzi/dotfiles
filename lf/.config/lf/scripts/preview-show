#!/bin/sh -efu
# Copyright Â© 2022-2023 Fern Zapata
# This program is subject to the terms of the GNU GPL, v. 3, or
# (at your option) any later version. If a copy of the GPL was not
# distributed with this file, see <https://www.gnu.org/licenses/>.

iscmd() {
	command -v -- $1 >/dev/null 2>&1
}

## Previewers #########################################################

prev_img() {
	if test -n "$KITTY_PID"; then
		kitty +kitten icat \
			--transfer-mode memory \
			--stdin=no \
			--place "${2}x${3}@${4}x${5}" \
			-- "$1" </dev/null >/dev/tty
		return 1
	elif iscmd chafa; then
		chafa \
			--colors 240 \
			--size "${2}x${3}" \
			--symbols 'ascii+vhalf+block+space' \
			--font-ratio 1/2 \
			-- "$1"
	elif iscmd img2txt; then
		img2txt -W "$2" -x 1 -y 2 -f utf8 -- "$1"
	elif iscmd magick; then
		magick \
			-read "$1" \
			-format '%m %z-bin %[colorspace]\n%g\n' \
			info:-
	else
		return 1
	fi
}

prev_snd() {
	if iscmd ffprobe; then
		ffprobe \
			-v error \
			-show_entries format_tags=title,artist,album,date \
			-of default=noprint_wrappers=1 \
			-- "$1" |
			awk -F'[:=]' '{printf "%-7s: %s\n", toupper($2), $3}'
	else
		return 1
	fi
}

prev_tor() {
	if iscmd transmission-show; then
		transmission-show -- "$1" | tail +4
	else
		return 1
	fi
}

prev_txt() {
	if iscmd highlight; then
		highlight \
			--force \
			--out-format=truecolor \
			--replace-tabs=2 \
			--style=base16/monokai \
			-- "$1" || true
	elif iscmd bat; then
		bat \
			--color always \
			--style plain \
			--paging never \
			--terminal-width "$2" \
			--wrap character \
			-- "$1"
	else
		cat "$1"
	fi
}

## Thumbnail Generators ###############################################

name_for() {
	printf '%s/%s.%s' \
		"${LF_CACHE_DIR}" "$(stat -c '%i%s%Y%Z' "$1")" "${2:-jpg}"
}

thumb_kra() {
	local thumb="$(name_for "$1" png)"

	if test ! -r "${thumb}" && iscmd unzip; then
		unzip -p "$1" mergedimage.png > "${thumb}"
	fi

	test -r "${thumb}" && printf "%s\n" "${thumb}"
}

thumb_pdf() {
	local thumb="$(name_for "$1")"

	if test ! -r "{thumb}"; then
		if iscmd vips; then
			vips thumbnail --size down \
				"$1" "${thumb}[optimize_coding,strip]" 512
		elif iscmd magick; then
			magick "${1}[0]" -thumbnail '512^>' "${thumb}"
		fi
	fi

	test -r "${thumb}" && printf "%s\n" "${thumb}"
}

thumb_vid() {
	local thumb="$(name_for "$1")"

	if test ! -r "${thumb}" && iscmd ffmpeg; then
		ffmpeg \
			-v quiet -y \
			-ss 3 \
			-i "$1" \
			-frames:v 1 \
			-vf scale=256:-2 \
			-- "${thumb}"
	fi

	test -r "${thumb}" && printf "%s\n" "${thumb}"
}

## File Type Handlers #################################################

prev_any() {
	local prev
	local cont=0

	case "$1" in
		*.kra | *.ora)
			if test -r "${prev:=$(thumb_kra "$1")}"; then
				shift
				prev_img "${prev}" "$@"
			fi
			;;
		*)
			cont=1
			;;
	esac

	test $cont -eq 0 && return 1

	local mime="$(file -Lb --mime-type "$1")"

	case "${mime}" in
		image/svg* | application/*pdf)
			if test -n "${prev:=$(thumb_pdf "$1")}"; then
				shift
				prev_img "${prev}" "$@"
			fi
			;;
		image/*)
			prev_img "$@"
			;;
		text/* | */xml | */json | */javascript)
			prev_txt "$@"
			;;
		audio/*)
			prev_snd "$@"
			;;
		video/*)
			if test -n "${prev:=$(thumb_vid "$1")}"; then
				shift
				prev_img "${prev}" "$@"
			fi
			;;
		*bittorrent)
			prev_tor "$@"
			;;
		*)
			printf "(%s)\n" "${mime}"
			return 1
			;;
	esac
}

prev_any "$@"
